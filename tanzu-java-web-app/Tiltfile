SOURCE_IMAGE = os.getenv("SOURCE_IMAGE", default='harbor.h2o-2-1249.h2o.vmware.com/tap/supply-chains/tanzu-java-web-app-monorepo-source')
LOCAL_PATH = os.getenv("LOCAL_PATH", default='/Users/mlarge/dev/application-accelerator-samples/tanzu-java-web-app')
NAMESPACE = os.getenv("NAMESPACE", default='mae')
OUTPUT_TO_NULL_COMMAND = os.getenv("OUTPUT_TO_NULL_COMMAND", default=' > /dev/null ')

k8s_custom_deploy(
    'tanzu-java-web-app-monorepo',
    apply_cmd="tanzu apps workload apply -f config/workload.yaml --debug --live-update" +
               " --local-path " + LOCAL_PATH +
               " --source-image " + SOURCE_IMAGE +
               " --namespace " + NAMESPACE +
               " --registry-ca-cert " + '/Users/mlarge/dev/application-accelerator-samples/tanzu-java-web-app/harbor-1249-ca.crt' +
               " --yes " +
               OUTPUT_TO_NULL_COMMAND +
               " && kubectl get workload tanzu-java-web-app-monorepo --namespace " + NAMESPACE + " -o yaml",
    delete_cmd="tanzu apps workload delete -f config/workload.yaml --namespace " + NAMESPACE + " --yes",
    deps=['/Users/mlarge/dev/application-accelerator-samples/tanzu-java-web-app/pom.xml', '/Users/mlarge/dev/application-accelerator-samples/tanzu-java-web-app/target/classes'],
    container_selector='workload',
    live_update=[
      sync('/Users/mlarge/dev/application-accelerator-samples/tanzu-java-web-app/target/classes', '/workspace/BOOT-INF/classes')
    ]
)

k8s_resource('tanzu-java-web-app-monorepo', port_forwards=["8080:8080"],
            extra_pod_selectors=[{'carto.run/workload-name': 'tanzu-java-web-app-monorepo', 'app.kubernetes.io/component': 'run'}])

allow_k8s_contexts('tkgs-tap')